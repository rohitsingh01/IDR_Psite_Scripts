import pandas as pd

# Data
data = [
    (1796, 2086, 'RHG32', 1796, 2087),
    (265, 330, 'CHK1', 296, 476),
    (284, 930, 'MYPT1', 472, 1030),
    (83, 376, 'MEFV', 242, 781),
    (1, 117, 'B2L11', 87, 198),
    (224, 593, 'FOXO3', 253, 673),
    (787, 1103, 'KIF1C', 1092, 1103),
    (228, 354, 'TBCD4', 341, 1298),
    (1, 188, 'SNN', 44, 88),
    (1619, 2440, 'NCOR1', 2335, 2440),
    (274, 820, 'ULK1', 556, 1050),
    (353, 478, 'BEST1', 358, 585),
    (87, 106, 'SASH1', 90, 1247),
    (67, 143, 'CDK14', 119, 469),
    (1, 35, 'SNAI1', 11, 264),
    (888, 1035, 'M3K6', 964, 1288),
    (1, 306, 'PAK4', 181, 591),
    (498, 1003, 'ABL1', 735, 1130),
    (201, 341, 'RAF1', 259, 648),
    (87, 188, 'GCR', 134, 777),
    (1, 44, 'HG2A', 8, 296),
    (277, 393, 'P53', 366, 393),
    (728, 768, 'ITB2', 758, 769),
    (756, 798, 'ITB1', 788, 798),
    (1, 112, 'K1C18', 34, 430),
    (1, 96, 'TY3H', 71, 528),
    (1283, 1367, 'IGF1R', 1313, 1367),
    (323, 1106, 'GLI1', 640, 1106),
    (471, 565, 'WEE2', 557, 567),
    (535, 1538, 'GLI2', 640, 1586),
    (826, 1405, 'GLI3', 1006, 1580),
    (123, 297, 'ARAF', 214, 606),
    (1, 630, 'TAU', 531, 758),
    (771, 821, 'FGFR1', 779, 822),
    (1002, 1032, 'ITA4', 1011, 1032),
    (1, 50, 'GFAP', 8, 432),
    (295, 462, 'BRAF', 365, 766),
    (318, 561, 'PRLR', 415, 622),
    (273, 382, 'CXA1', 373, 382),
    (1, 274, 'NELFE', 115, 380),
    (702, 815, 'SL9A1', 703, 815),
    (238, 403, 'HNF1A', 247, 631),
    (1, 77, 'PHOS', 54, 246),
    (1, 427, 'CD11B', 113, 795),
    (773, 821, 'FGFR2', 782, 821),
    (340, 360, 'NR4A1', 351, 598),
    (358, 490, 'PTN3', 359, 913),
    (1, 107, 'TTP', 60, 326),
    (48, 124, 'P85A', 83, 724),
    (1, 330, 'MPIP1', 178, 524),
    (1, 387, 'MPIP2', 151, 580),
    (102, 228, 'MPIP3', 216, 473),
    (1100, 1229, 'L1CAM', 1181, 1257),
    (411, 896, 'IL3RB', 601, 897),
    (551, 554, 'CTNB1', 552, 781),
    (241, 1242, 'IRS1', 374, 1242),
    (315, 765, 'UBP8', 718, 1118),
    (861, 1078, 'CASR', 895, 1078),
    (230, 270, 'AQP2', 256, 271),
    (264, 359, 'KSYK', 297, 635),
    (352, 627, 'ACHA4', 467, 627),
    (1, 198, 'CDN1B', 157, 198),
    (1, 466, 'YAP1', 127, 504),
    (1, 58, 'CENPA', 7, 140),
    (285, 363, 'PCY1A', 288, 367),
    (197, 646, 'NUMB', 295, 651),
    (654, 1067, 'RGS3', 943, 1198),
    (918, 977, 'TSC2', 939, 1807),
    (91, 271, 'ETV1', 216, 477),
    (178, 226, 'RND2', 223, 227),
    (327, 398, 'PLK1', 330, 603),
    (715, 812, 'ATX1', 775, 815),
    (1, 69, 'GEM', 23, 296),
    (87, 667, 'HDAC4', 350, 1084),
    (2, 268, 'MLF1', 34, 268),
    (1, 47, 'H31', 29, 136),
    (133, 462, '3BP2', 278, 561),
    (230, 508, 'SRPK2', 492, 688),
    (173, 295, 'FOXO4', 197, 505),
    (99, 286, 'MDM2', 166, 491),
    (291, 402, 'KPCE', 346, 737),
    (765, 960, 'KIF23', 814, 960),
    (1359, 1400, 'RON', 1394, 1400),
    (48, 56, 'BTK', 51, 659),
    (44, 121, 'TISB', 92, 338),
    (402, 573, 'KLC1', 545, 573),
    (1015, 1333, 'SOS1', 1161, 1333),
    (1, 104, 'FOXO1', 24, 655),
    (1, 429, 'TIAM1', 172, 1591),
    (651, 653, 'TRI32', 652, 653),
    (74, 421, 'LCP2', 376, 533),
    (113, 327, 'ZBT17', 291, 803),
    (375, 828, 'MK07', 486, 816),
    (1, 94, 'SKP2', 72, 424),
    (405, 601, 'TNK1', 502, 666),
    (211, 381, 'RIN1', 351, 783),
    (1141, 1323, 'SPTA2', 1302, 2472),
    (1, 481, 'SRC8', 298, 550),
    (400, 652, 'PDE3A', 428, 1141),
    (106, 459, 'LPIN1', 287, 890),
    (1, 378, 'NFAC4', 272, 902),
    (347, 494, 'RHG19', 422, 494),
    (314, 607, 'TESK1', 437, 626),
    (302, 433, 'STK11', 336, 433),
    (1, 48, 'SNAT', 31, 207),
    (1, 47, 'H31T', 29, 136),
    (124, 204, 'TPD53', 137, 204),
    (668, 888, 'RGPA2', 715, 1871),
    (362, 695, 'COF1', 476, 700),
    (278, 346, 'AKT3', 331, 479),
    (648, 744, 'AXIN2', 662, 843),
    (175, 249, 'GIPC1', 197, 333),
    (133, 188, 'ADP2A', 186, 583),
    (198, 205, 'ADP2B', 203, 414),
    (159, 329, 'MECM2', 263, 560),
    (181, 202, 'RSK1', 193, 739),
    (165, 193, 'SYNJ1', 178, 1612),
    (1, 96, 'EPHB6', 70, 1013),
    (84, 95, 'ET2D1', 92, 119),
    (1, 47, 'HIST1', 29, 136),
    (179, 323, 'CCND1', 286, 595),
    (336, 344, 'DDR2', 343, 908),
    (50, 91, 'FRS2', 89, 499),
    (738, 766, 'HSGE1', 755, 766),
    (167, 324, 'CBF1', 235, 769),
    (1163, 1182, 'KPCA', 1164, 1182),
    (310, 501, 'STAT3', 315, 770),
    (97, 179, 'TLK2', 157, 772),
    (139, 146, 'SYK', 145, 635),
    (1252, 1270, 'DSC2', 1264, 1271),
    (107, 282, 'COTL1', 135, 142),
    (784, 893, 'XRN2', 839, 893),
    (377, 418, 'FGR', 410, 530),
    (576, 737, 'EPHB1', 706, 1083),
    (249, 297, 'SNT1', 280, 441),
    (225, 247, 'KP3A', 233, 583),
    (104, 247, 'NACC1', 142, 527),
    (180, 182, 'VAV2', 182, 926),
    (188, 192, 'PKN2', 190, 982),
    (168, 177, 'RSK2', 175, 739),
    (137, 144, 'SH2D2A', 140, 396),
    (204, 218, 'SNT2', 212, 553),
    (105, 186, 'CBL', 165, 474),
    (76, 90, 'KP2C', 86, 508),
    (181, 192, 'RASGAP', 188, 1024),
    (108, 128, 'CBLB', 117, 988),
    (1, 38, 'YWHAG', 22, 254),
    (108, 127, 'CBLC', 116, 488),
    (105, 192, 'KP2D', 145, 528),
    (1, 46, 'KP3D', 31, 284),
    (114, 133, 'RIN2', 129, 783),
    (100, 106, 'SNT3', 103, 553),
    (1, 67, 'ADP1A', 47, 578),
    (1, 53, 'KP3B', 44, 583),
    (96, 106, 'RIN3', 101, 783),
    (88, 100, 'KP2B', 94, 528),
    (90, 100, 'KP3C', 95, 583),
    (1, 60, 'CBLA', 40, 474),
    (81, 97, 'CBLB', 89, 474),
    (148, 159, 'CBL2', 153, 474),
    (110, 121, 'CBLC', 116, 488),
    (118, 129, 'RIN3', 122, 783),
    (1, 37, 'RIN1', 29, 783),
    (86, 99, 'KP3A', 92, 583),
    (113, 125, 'KP3C', 120, 583),
    (1, 55, 'RIN2', 46, 783),
    (78, 94, 'RIN3', 85, 783),
    (153, 165, 'KP3B', 160, 583),
    (120, 132, 'RIN3', 125, 783),
    (115, 126, 'CBLA', 121, 474),
    (71, 86, 'KP3D', 78, 583),
    (57, 68, 'RIN1', 61, 783),
    (90, 101, 'RIN2', 95, 783),
    (168, 177, 'RSK2', 175, 739),
    (137, 144, 'SH2D2A', 140, 396),
    (204, 218, 'SNT2', 212, 553),
    (105, 186, 'CBL', 165, 474),
    (76, 90, 'KP2C', 86, 508),
    (181, 192, 'RASGAP', 188, 1024),
    (108, 128, 'CBLB', 117, 988),
    (1, 38, 'YWHAG', 22, 254),
    (108, 127, 'CBLC', 116, 488),
    (105, 192, 'KP2D', 145, 528),
    (1, 46, 'KP3D', 31, 284),
    (114, 133, 'RIN2', 129, 783),
    (100, 106, 'SNT3', 103, 553),
    (1, 67, 'ADP1A', 47, 578),
    (1, 53, 'KP3B', 44, 583),
    (96, 106, 'RIN3', 101, 783),
    (88, 100, 'KP2B', 94, 528),
    (90, 100, 'KP3C', 95, 583),
    (1, 60, 'CBLA', 40, 474),
    (81, 97, 'CBLB', 89, 474),
    (148, 159, 'CBL2', 153, 474),
    (110, 121, 'CBLC', 116, 488),
    (118, 129, 'RIN3', 122, 783),
    (1, 37, 'RIN1', 29, 783),
    (86, 99, 'KP3A', 92, 583),
    (113, 125, 'KP3C', 120, 583),
    (1, 55, 'RIN2', 46, 783),
    (78, 94, 'RIN3', 85, 783),
    (153, 165, 'KP3B', 160, 583),
    (120, 132, 'RIN3', 125, 783),
    (115, 126, 'CBLA', 121, 474),
    (71, 86, 'KP3D', 78, 583),
    (57, 68, 'RIN1', 61, 783),
    (90, 101, 'RIN2', 95, 783)
]

# Create DataFrame
df = pd.DataFrame(data, columns=['IDR start', 'IDR end', 'protein name', 'p-site', 'total protein length'])

# Calculate IDR length
df['IDR length'] = df['IDR end'] - df['IDR start']

# Reorder columns
df = df[['protein name', 'IDR start', 'IDR end', 'IDR length', 'p-site', 'total protein length']]

# Save to CSV
df.to_csv('protein_data.csv', index=False)
